package com.geekstack.cards.service;

import java.io.StringReader;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import jakarta.json.Json;
import jakarta.json.JsonObject;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;

@Service
public class EmailService {

    @Autowired
    private JavaMailSender mailSender;

    @Value("${reporting.email}")
    private String emailAddress;

    @Async
    public void sendReportEmail(String payload) {
        try {
            JsonObject jobject = Json.createReader(new StringReader(payload)).readObject();
            String cardUid = jobject.getString("cardUid");
            String userId = jobject.getString("userId");
            String errorMsg = jobject.getString("errorMsg");
            String tcg = jobject.getString("tcg");

            System.out.println("Attempting to send email...");
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true);
            helper.setTo(emailAddress);
            helper.setSubject(buildTrelloEmailSubject(cardUid, tcg));
            helper.setText(buildTrelloEmailBody(userId, cardUid, errorMsg), true);

            System.out.println("Mail Properties:");
            System.out.println("Name: " + mailSender.getClass().getName());

            mailSender.send(message);
            System.out.println("Email sent successfully");
        } catch (MessagingException e) {
            System.err.println("MessagingException: " + e.getMessage());
            e.printStackTrace();
            if (e.getCause() != null) {
                System.err.println("Root cause: " + e.getCause().getMessage());
            }
        } catch (Exception e) {
            System.err.println("Unexpected error: " + e.getMessage());
            e.printStackTrace();
        }
    }

    private String buildTrelloEmailBody(String userId, String cardUid, String errorMsg) {
        return "<html>" +
                "<body>" +
                "<h2>ðŸ”´ Error Report</h2>" +
                "<hr/>" +
                "<p><strong>User ID:</strong> " + userId + "</p>" +
                "<p><strong>Card ID:</strong> " + cardUid + "</p>" +
                "<p><strong>Error Message:</strong></p>" +
                "<blockquote style='color:red;'>" + errorMsg + "</blockquote>" +
                "<p><strong>Timestamp:</strong> " + java.time.LocalDateTime.now() + "</p>" +
                "<hr/>" +
                "<p><em>This ticket was automatically generated by GeekStack System.</em></p>" +
                "</body>" +
                "</html>";
    }

    private String buildTrelloEmailSubject(String cardUid, String tcg) {
        return "Error Ticket - " + cardUid + " #" + tcg;
    }

}